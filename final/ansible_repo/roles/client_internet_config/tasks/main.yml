---
- meta: end_play
  when: (ansible_distribution != "CentOS" and ansible_distribution_major_version != "7")

- name: Install required packages
  yum:
    name: "{{ packages }}"
    state: present
  vars:
    packages:
    - dbus
    - NetworkManager-glib
    - NetworkManager
    - tcpdump
  notify: "reload NetworkManager"

- name: net.ipv4.conf.all.forwarding to /etc/sysctl.conf
  sysctl:
    name: net.ipv4.conf.all.forwarding
    value: "1"
    sysctl_set: yes
    state: present
    reload: yes

- name: net.ipv4.ip_forward to /etc/sysctl.conf
  sysctl:
    name: net.ipv4.ip_forward
    value: "1"
    sysctl_set: yes
    state: present
    reload: yes

- name: net.ipv4.conf.all.rp_filter to /etc/sysctl.conf
  sysctl:
    name: net.ipv4.conf.all.rp_filter
    value: "2"
    sysctl_set: yes
    state: present
    reload: yes

- name: Check for replay (/opt/internetwork_done exists)
  stat:
    path: /opt/internetwork_done
  register: internetwork_done

# Можно было использовать модуль nmcli, но какие-то баги не дают это сделать.
- name: Manage internetwork interface
  command: "{{ item }}"
  with_items:
    - "nmcli con mod \"Wired\ connection\ 2\" ipv4.addresses {{ interrouter_ip }}/{{ internetwork_cidr_mask }}"
    - "nmcli con mod \"Wired\ connection\ 2\" ipv6.method ignore"
    - "nmcli con mod \"Wired\ connection\ 2\" ipv4.method manual"
    - "nmcli con mod \"Wired\ connection\ 2\" ipv4.routes \"{{ prod_network_addr }}/{{ prod_cidr_mask }} {{ opposite_ip }}\""
    - "nmcli con down \"Wired\ connection\ 2\""
    - "nmcli con up \"Wired\ connection\ 2\""
  when:
    - internetwork_done.stat.exists != True

- name: Set replay protection (/opt/internetwork_done)
  file:
    path: /opt/internetwork_done
    state: touch
    owner: root
    group: root
    mode: '0744'
  when:
    - internetwork_done.stat.exists != True

- name: Check for replay (/opt/client_network_done exists)
  stat:
    path: /opt/client_network_done
  register: client_network_done

# Можно было использовать модуль nmcli, но какие-то баги не дают это сделать.
- name: Modify network interface
  command: "{{ item }}"
  with_items:
    - "nmcli con mod \"Wired\ connection\ 1\" ipv4.addresses {{ prod_ip_addr }}/{{ client_cidr_mask }}"
    - "nmcli con mod \"Wired\ connection\ 1\" ipv6.method ignore"
    - "nmcli con mod \"Wired\ connection\ 1\" ipv4.method manual"
    - "nmcli con mod \"Wired\ connection\ 1\" ipv4.dns \"{{ main_dns_server }}, {{ second_dns_server }}\""
    - "nmcli con mod \"Wired\ connection\ 1\" ipv4.dns-search {{ domain }}"
    - "nmcli con down \"Wired\ connection\ 1\""
    - "nmcli con up \"Wired\ connection\ 1\""
  when:
    - client_network_done.stat.exists != True

- name: Set replay protection (/opt/client_network_done)
  file:
    path: /opt/client_network_done
    state: touch
    owner: root
    group: root
    mode: '0744'
  when:
    - client_network_done.stat.exists != True

- meta: flush_handlers
...